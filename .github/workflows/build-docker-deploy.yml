name: build-docker-deploy
on:
    # pull_request:
    # push:
  pull_request:
    branches:
      - "16.0*"
  push:
    branches:
      - "16.0*"
env:
  TEMP_BUILD: opd-16-temp
  CONTAINER_NAME: opd-16
  CONTAINER_IMAGE: nirun:latest
  CONTAINER_IMAGE_DEPLOY: nirun:deploy
  NIRUN_DOCKER_BRANCH: max-dev 
jobs:
  build-deploy:
    runs-on: self-hosted
    environment: secrets-nirun
    steps:
      - name: Build docker
        uses: appleboy/ssh-action@v1.0.0
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.PRIVATE_SSH_KEY }}
            port: ${{ secrets.SSH_PORT }}
            script: |
                echo ${{ env.TEMP_BUILD }}
                mkdir ${{ env.TEMP_BUILD }}
                cd ${{ env.TEMP_BUILD }}
                git clone --branch ${{ env.NIRUN_DOCKER_BRANCH }} https://${{ secrets.GH_USER }}:${{ secrets.GH_TOKEN }}@github.com/nirun-life/docker.git
                cd docker && git pull
                ls -al
                export GH_USER=${{ secrets.GH_USER }}
                export GH_TOKEN=${{ secrets.GH_TOKEN }}
                export DOCKER_BUILDKIT=1
                docker image ls |grep '<none>' |awk '{ print "docker image rm "$3 }' | sh
                docker build --secret id=GH_USER,env=GH_USER --secret id=GH_TOKEN,env=GH_TOKEN --no-cache --tag ${{ env.CONTAINER_IMAGE }} --file Dockerfile .
                
      - name: Deploy staging
        uses: appleboy/ssh-action@v1.0.0
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.PRIVATE_SSH_KEY }}
            port: ${{ secrets.SSH_PORT }}
            script: |
                cd ${{ env.TEMP_BUILD }}/docker
                git pull
                pwd
                mkdir odoo
                mkdir addons
                ls -alh
                docker stack rm ${{ env.CONTAINER_NAME }} || true
                sleep 8
                mkdir config-run
                rsync -av --delete config/ config-run/
                sed -i 's/db_host = .*/db_host = ${{ secrets.POSTGRES_HOST }}/g' ./config-run/odoo.conf
                sed -i 's/db_port = .*/db_port = ${{ secrets.POSTGRES_PORT }}/g' ./config-run/odoo.conf
                sed -i 's/db_name = .*/db_name = ${{ secrets.POSTGRES_DB }}/g' ./config-run/odoo.conf
                sed -i 's/db_user = .*/db_user = ${{ secrets.POSTGRES_USER }}/g' ./config-run/odoo.conf
                sed -i 's/db_password = .*/db_password = ${{ secrets.POSTGRES_PASSWORD }}/g' ./config-run/odoo.conf
                sed -i 's/admin_passwd= .*/admin_passwd = ${{ secrets.POSTGRES_PASSWORD }}/g' ./config-run/odoo.conf
                docker image rm ${{ env.CONTAINER_IMAGE_DEPLOY }} || true
                docker tag ${{ env.CONTAINER_IMAGE }} ${{ env.CONTAINER_IMAGE_DEPLOY }}
                docker stack deploy -c ./stack.yml ${{ env.CONTAINER_NAME }}
                sleep 8
                docker stack ps ${{ env.CONTAINER_NAME }}
                echo "Done"
